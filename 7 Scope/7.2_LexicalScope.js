/*
    정적 스코프(Lexical Scope)
    js의 스코프는 정적(Lexical)입니다.
    소스 코드만 봐도 변수가 스코프에 있는지 판단할 수 있다는 뜻입니다. 다만, 소스 코드만 봐도 즉시 스코프를 분명히 알 수 있다는 뜻은 아닙니다.
    정적 스코프는 어떤 변수가 함수 스코프 안에 있는지 함수를 정의할 때 알 수 있다는 뜻입니다. 호출할 때 알 수 있는 것은 아닙니다.
*/

const x = 3

function f() {
    console.log(x)
    console.log(y)
}

{
    const y = 5
    f() // ReferenceError : y is not defined
}

/*
    위 예제에서 변수 x는 함수 f를 정의할 때 존재하지만, y는 그렇지 않습니다. y는 다른 스코프에 존재합니다.
    다른 스코프에서 y를 선언하고 그 스코프에서 f를 호출하더라도, x는 f 바디 안에 있지만 y는 그렇지 않습니다.
    함수 f는 자신이 정의될 때 접근할 수 있었던 식별자에는 여전히 접근할 수 있지만, 호출할 때 스코프에 있는 식별자에 접근할 수는 없습니다.
    이것이 정적 스코프입니다.
*/